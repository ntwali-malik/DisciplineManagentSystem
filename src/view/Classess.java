package view;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.MessageFormat;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author N.Maliki
 */
public class Classess extends javax.swing.JFrame {

    /**
     * Creates new form Classess
     */
    public Classess() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        msg1 = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        searchClassBox = new javax.swing.JTextField();
        classSearchBtn = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        classNameBox = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        classRoomBox = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        classCapacityBox = new javax.swing.JTextField();
        deleteClassBtn = new javax.swing.JButton();
        addClassBtn = new javax.swing.JButton();
        editClassBtn = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel35 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        allClassesTable = new javax.swing.JTable();
        printClassBtn = new javax.swing.JButton();
        refreshClassBtn = new javax.swing.JButton();
        backToDashboardBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CLASSES");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        msg1.setBackground(new java.awt.Color(235, 252, 252));
        msg1.setFont(new java.awt.Font("Unispace", 1, 36)); // NOI18N
        msg1.setForeground(new java.awt.Color(235, 252, 252));
        msg1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        msg1.setText("CLASSES");
        msg1.setAlignmentX(1.0F);
        msg1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.add(msg1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 980, 62));

        jPanel15.setBackground(new java.awt.Color(0, 102, 102));
        jPanel15.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51), 2));
        jPanel15.setForeground(new java.awt.Color(0, 102, 102));
        jPanel15.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel31.setBackground(new java.awt.Color(51, 0, 153));
        jLabel31.setFont(new java.awt.Font("Unispace", 1, 18)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(235, 252, 252));
        jLabel31.setText("Enter the ID of the Class");
        jPanel15.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 2, 260, 46));

        searchClassBox.setBackground(new java.awt.Color(235, 252, 252));
        searchClassBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchClassBoxActionPerformed(evt);
            }
        });
        jPanel15.add(searchClassBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 230, 40));

        classSearchBtn.setFont(new java.awt.Font("Unispace", 0, 18)); // NOI18N
        classSearchBtn.setForeground(new java.awt.Color(0, 102, 102));
        classSearchBtn.setText("Search");
        classSearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classSearchBtnActionPerformed(evt);
            }
        });
        jPanel15.add(classSearchBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(273, 50, 200, 40));

        jPanel1.add(jPanel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 73, 487, 100));

        jPanel5.setBackground(new java.awt.Color(0, 102, 102));
        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel32.setBackground(new java.awt.Color(51, 0, 153));
        jLabel32.setFont(new java.awt.Font("Unispace", 1, 18)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(235, 252, 252));
        jLabel32.setText("Class Name");
        jPanel5.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 2, 260, 40));

        classNameBox.setBackground(new java.awt.Color(235, 252, 252));
        classNameBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classNameBoxActionPerformed(evt);
            }
        });
        jPanel5.add(classNameBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 270, 40));

        jLabel33.setBackground(new java.awt.Color(51, 0, 153));
        jLabel33.setFont(new java.awt.Font("Unispace", 1, 18)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(235, 252, 252));
        jLabel33.setText("Class Room");
        jPanel5.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 260, 40));

        classRoomBox.setBackground(new java.awt.Color(235, 252, 252));
        classRoomBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classRoomBoxActionPerformed(evt);
            }
        });
        jPanel5.add(classRoomBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 270, 40));

        jLabel34.setBackground(new java.awt.Color(51, 0, 153));
        jLabel34.setFont(new java.awt.Font("Unispace", 1, 18)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(235, 252, 252));
        jLabel34.setText("Class Capacity");
        jPanel5.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 260, 40));

        classCapacityBox.setBackground(new java.awt.Color(235, 252, 252));
        classCapacityBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classCapacityBoxActionPerformed(evt);
            }
        });
        jPanel5.add(classCapacityBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, 270, 40));

        deleteClassBtn.setFont(new java.awt.Font("Unispace", 0, 18)); // NOI18N
        deleteClassBtn.setForeground(new java.awt.Color(0, 102, 102));
        deleteClassBtn.setText("Delete");
        deleteClassBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteClassBtnActionPerformed(evt);
            }
        });
        jPanel5.add(deleteClassBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 270, 200, 40));

        addClassBtn.setFont(new java.awt.Font("Unispace", 0, 18)); // NOI18N
        addClassBtn.setForeground(new java.awt.Color(0, 102, 102));
        addClassBtn.setText("Add");
        addClassBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addClassBtnActionPerformed(evt);
            }
        });
        jPanel5.add(addClassBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 300, 200, 40));

        editClassBtn.setFont(new java.awt.Font("Unispace", 0, 18)); // NOI18N
        editClassBtn.setForeground(new java.awt.Color(0, 102, 102));
        editClassBtn.setText("Edit");
        editClassBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editClassBtnActionPerformed(evt);
            }
        });
        jPanel5.add(editClassBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 340, 200, 40));

        jPanel1.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 560, 390));

        jPanel6.setBackground(new java.awt.Color(0, 102, 102));
        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jLabel35.setBackground(new java.awt.Color(51, 0, 153));
        jLabel35.setFont(new java.awt.Font("Unispace", 1, 18)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(235, 252, 252));
        jLabel35.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel35.setText("ALL CLASSES");
        jLabel35.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        allClassesTable.setBackground(new java.awt.Color(235, 252, 252));
        allClassesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(allClassesTable);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel35, javax.swing.GroupLayout.DEFAULT_SIZE, 466, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 316, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 110, 490, 390));

        printClassBtn.setFont(new java.awt.Font("Unispace", 0, 18)); // NOI18N
        printClassBtn.setForeground(new java.awt.Color(0, 102, 102));
        printClassBtn.setText("Print");
        printClassBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printClassBtnActionPerformed(evt);
            }
        });
        jPanel1.add(printClassBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 520, 200, 40));

        refreshClassBtn.setFont(new java.awt.Font("Unispace", 0, 18)); // NOI18N
        refreshClassBtn.setForeground(new java.awt.Color(0, 102, 102));
        refreshClassBtn.setText("Refresh");
        refreshClassBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshClassBtnActionPerformed(evt);
            }
        });
        jPanel1.add(refreshClassBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 520, 200, 40));

        backToDashboardBtn.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        backToDashboardBtn.setForeground(new java.awt.Color(0, 102, 102));
        backToDashboardBtn.setText("Back");
        backToDashboardBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backToDashboardBtnActionPerformed(evt);
            }
        });
        jPanel1.add(backToDashboardBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 0, 90, 40));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1090, 599));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void searchClassBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchClassBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchClassBoxActionPerformed

    private void classSearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classSearchBtnActionPerformed
        // Retrieve the class ID entered in searchClassBox
        int classId = Integer.parseInt(searchClassBox.getText());

        // JDBC connection parameters
        String url = "jdbc:postgresql://localhost:5432/displine_management_system_db";
        String user = "postgres";
        String password = "123";

        // SQL SELECT statement to retrieve class details by ID
        String selectSql = "SELECT * FROM class WHERE class_id = ?";

        try (Connection conn = DriverManager.getConnection(url, user, password);
                PreparedStatement statement = conn.prepareStatement(selectSql)) {
            // Set the class ID parameter for the prepared statement
            statement.setInt(1, classId);

            // Execute the SELECT query
            ResultSet resultSet = statement.executeQuery();

            // Check if a class with the entered ID exists
            if (resultSet.next()) {
                // Display class details in classNameBox, classRoomBox, and classCapacityBox
                classNameBox.setText(resultSet.getString("class_name"));
                classRoomBox.setText(resultSet.getString("class_room"));
                classCapacityBox.setText(String.valueOf(resultSet.getInt("class_capacity")));
            } else {
                // If no class with the entered ID is found, display a message
                JOptionPane.showMessageDialog(this, "Class not found!", "Error", JOptionPane.ERROR_MESSAGE);
                // Clear classNameBox, classRoomBox, and classCapacityBox
                classNameBox.setText("");
                classRoomBox.setText("");
                classCapacityBox.setText("");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_classSearchBtnActionPerformed

    private void classNameBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classNameBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_classNameBoxActionPerformed

    private void classRoomBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classRoomBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_classRoomBoxActionPerformed

    private void classCapacityBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classCapacityBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_classCapacityBoxActionPerformed

    private void deleteClassBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteClassBtnActionPerformed
        // Retrieve the class ID entered in searchClassBox
        int classId = Integer.parseInt(searchClassBox.getText());
        
        // Confirm with the user before deleting
        int option = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this user?", "Confirmation", JOptionPane.YES_NO_OPTION);
        if (option != JOptionPane.YES_OPTION) {
            return; // Cancel deletion if user selects No
        }
        // JDBC connection parameters
        String url = "jdbc:postgresql://localhost:5432/displine_management_system_db";
        String user = "postgres";
        String password = "123";

        // SQL DELETE statement to delete a class
        String deleteSql = "DELETE FROM class WHERE class_id = ?";

        try (Connection conn = DriverManager.getConnection(url, user, password);
                PreparedStatement statement = conn.prepareStatement(deleteSql)) {
            // Set the class ID parameter for the prepared statement
            statement.setInt(1, classId);

            // Execute the DELETE query
            int rowsAffected = statement.executeUpdate();

            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(this, "Class deleted successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
                // Clear classNameBox, classRoomBox, and classCapacityBox after deletion
                classNameBox.setText("");
                classRoomBox.setText("");
                classCapacityBox.setText("");
            } else {
                JOptionPane.showMessageDialog(this, "Failed to delete class!", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_deleteClassBtnActionPerformed

    private void addClassBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addClassBtnActionPerformed
        // Retrieve class information from GUI components
        String className = classNameBox.getText();
        String classRoom = classRoomBox.getText();
        int classCapacity = Integer.parseInt(classCapacityBox.getText());
        
        // JDBC connection parameters
        String url = "jdbc:postgresql://localhost:5432/displine_management_system_db";
        String user = "postgres";
        String password = "123";

        // SQL INSERT statement
        String insertSql = "INSERT INTO class (class_name, class_room, class_capacity) VALUES (?, ?, ?)";
        try (Connection conn = DriverManager.getConnection(url, user, password);
                PreparedStatement insertStmt = conn.prepareStatement(insertSql)) {
            // Set parameters for the prepared statement
            insertStmt.setString(1, className);
            insertStmt.setString(2, classRoom);
            insertStmt.setInt(3, classCapacity);

            // Execute the SQL statement
            int rowsAffected = insertStmt.executeUpdate();
            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(this, "Class added successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
                clearTextFields(); // Assuming you have a method to clear input fields
            } else {
                JOptionPane.showMessageDialog(this, "Failed to add class!", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_addClassBtnActionPerformed

    private void editClassBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editClassBtnActionPerformed
        // Retrieve the class ID entered in searchClassBox
        int classId = Integer.parseInt(searchClassBox.getText());

        // Retrieve the new class information entered in classNameBox, classRoomBox, and classCapacityBox
        String newClassName = classNameBox.getText();
        String newClassRoom = classRoomBox.getText();
        int newClassCapacity = Integer.parseInt(classCapacityBox.getText());

        // JDBC connection parameters
        String url = "jdbc:postgresql://localhost:5432/displine_management_system_db";
        String user = "postgres";
        String password = "123";

        // SQL UPDATE statement to update class details
        String updateSql = "UPDATE class SET class_name = ?, class_room = ?, class_capacity = ? WHERE class_id = ?";

        try (Connection conn = DriverManager.getConnection(url, user, password);
                PreparedStatement statement = conn.prepareStatement(updateSql)) {
            // Set parameters for the prepared statement
            statement.setString(1, newClassName);
            statement.setString(2, newClassRoom);
            statement.setInt(3, newClassCapacity);
            statement.setInt(4, classId);

            // Execute the UPDATE query
            int rowsAffected = statement.executeUpdate();

            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(this, "Class updated successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Failed to update class!", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_editClassBtnActionPerformed

    private void printClassBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printClassBtnActionPerformed
        // Set the title of the table
        String tableTitle = "All Classes";
        // Create the header MessageFormat including the title
        MessageFormat header = new MessageFormat("DISPLINE MANAGEMENT SYSTEM - " + tableTitle);
        MessageFormat footer = new MessageFormat("©25753__Maliki Ntwali");
        try {
            allClassesTable.print(JTable.PrintMode.FIT_WIDTH, header, footer);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_printClassBtnActionPerformed

    private void refreshClassBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshClassBtnActionPerformed
        // JDBC connection parameters
        String url = "jdbc:postgresql://localhost:5432/displine_management_system_db";
        String user = "postgres";
        String password = "123";

        // SQL SELECT statement to retrieve all classes
        String selectSql = "SELECT * FROM class";

        try (Connection conn = DriverManager.getConnection(url, user, password);
                Statement statement = conn.createStatement()) {
            // Execute the SELECT query
            ResultSet resultSet = statement.executeQuery(selectSql);

            // Create a new DefaultTableModel to hold the data
            DefaultTableModel model = new DefaultTableModel();

            // Add columns to the model
            model.addColumn("Class ID");
            model.addColumn("Class Name");
            model.addColumn("Class Room");
            model.addColumn("Class Capacity");

            // Populate the model with data from the ResultSet
            while (resultSet.next()) {
                Object[] rowData = {
                    resultSet.getInt("class_id"),
                    resultSet.getString("class_name"),
                    resultSet.getString("class_room"),
                    resultSet.getInt("class_capacity")
                };
                model.addRow(rowData);
            }

            // Set the model to the JTable
            allClassesTable.setModel(model);

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_refreshClassBtnActionPerformed

    private void backToDashboardBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backToDashboardBtnActionPerformed
        Dashboard f = new Dashboard();
        f.show();
        this.dispose();
                
    }//GEN-LAST:event_backToDashboardBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Classess.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Classess.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Classess.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Classess.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Classess().setVisible(true);
            }
        });
    }

    private void clearTextFields() {
        classNameBox.setText("");
        classRoomBox.setText("");
        classCapacityBox.setText("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addClassBtn;
    private javax.swing.JTable allClassesTable;
    private javax.swing.JButton backToDashboardBtn;
    private javax.swing.JTextField classCapacityBox;
    private javax.swing.JTextField classNameBox;
    private javax.swing.JTextField classRoomBox;
    private javax.swing.JButton classSearchBtn;
    private javax.swing.JButton deleteClassBtn;
    private javax.swing.JButton editClassBtn;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel msg1;
    private javax.swing.JButton printClassBtn;
    private javax.swing.JButton refreshClassBtn;
    private javax.swing.JTextField searchClassBox;
    // End of variables declaration//GEN-END:variables
}
