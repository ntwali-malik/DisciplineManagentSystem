package view;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.MessageFormat;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author N.Maliki
 */
public class Teacherpermission extends javax.swing.JFrame {

    /**
     * Creates new form permission
     */
    public Teacherpermission() {
        initComponents();
        pemitExecuteBtn.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        permitNameBox = new javax.swing.JTextField();
        PermitSearchBtn = new javax.swing.JButton();
        msg1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        studentNameBox = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        permitDaysBox = new javax.swing.JTextField();
        pemitExecuteBtn = new javax.swing.JButton();
        peermissionPrintBtn = new javax.swing.JButton();
        jLabel30 = new javax.swing.JLabel();
        permitReasonBox = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        permittedStudentsTable = new javax.swing.JTable();
        refreshPermissionBtn = new javax.swing.JButton();
        removePermissionBtn = new javax.swing.JButton();
        backToDashBoardBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("PERMISSION");

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));

        jPanel15.setBackground(new java.awt.Color(0, 102, 102));
        jPanel15.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51), 2));
        jPanel15.setForeground(new java.awt.Color(0, 102, 102));

        jLabel31.setBackground(new java.awt.Color(51, 0, 153));
        jLabel31.setFont(new java.awt.Font("Unispace", 1, 18)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(235, 252, 252));
        jLabel31.setText("Enter the Name of the student to Give a permission");

        permitNameBox.setBackground(new java.awt.Color(235, 252, 252));
        permitNameBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                permitNameBoxActionPerformed(evt);
            }
        });

        PermitSearchBtn.setFont(new java.awt.Font("Unispace", 0, 24)); // NOI18N
        PermitSearchBtn.setForeground(new java.awt.Color(0, 102, 102));
        PermitSearchBtn.setText("Search");
        PermitSearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PermitSearchBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(jLabel31)
                        .addGap(0, 24, Short.MAX_VALUE))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(permitNameBox)
                        .addGap(18, 18, 18)
                        .addComponent(PermitSearchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PermitSearchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(permitNameBox, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        msg1.setBackground(new java.awt.Color(235, 252, 252));
        msg1.setFont(new java.awt.Font("Unispace", 1, 36)); // NOI18N
        msg1.setForeground(new java.awt.Color(235, 252, 252));
        msg1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        msg1.setText("PERMISSION");
        msg1.setAlignmentX(1.0F);
        msg1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel2.setBackground(new java.awt.Color(0, 102, 102));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel3.setBackground(new java.awt.Color(0, 102, 102));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel27.setBackground(new java.awt.Color(51, 0, 153));
        jLabel27.setFont(new java.awt.Font("Unispace", 1, 18)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(235, 252, 252));
        jLabel27.setText("Student Names");
        jPanel3.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 60, -1, -1));

        studentNameBox.setBackground(new java.awt.Color(235, 252, 252));
        studentNameBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentNameBoxActionPerformed(evt);
            }
        });
        jPanel3.add(studentNameBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 95, 478, 47));

        jLabel29.setBackground(new java.awt.Color(51, 0, 153));
        jLabel29.setFont(new java.awt.Font("Unispace", 1, 18)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(235, 252, 252));
        jLabel29.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel29.setText("ENTER DETAILS FOR PERMISSION FOR STUDENT");
        jLabel29.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jPanel3.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 510, 41));

        jLabel28.setBackground(new java.awt.Color(51, 0, 153));
        jLabel28.setFont(new java.awt.Font("Unispace", 1, 18)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(235, 252, 252));
        jLabel28.setText("Days of Permission");
        jPanel3.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, -1, 31));

        permitDaysBox.setBackground(new java.awt.Color(235, 252, 252));
        permitDaysBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                permitDaysBoxActionPerformed(evt);
            }
        });
        jPanel3.add(permitDaysBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 290, 477, 47));

        pemitExecuteBtn.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        pemitExecuteBtn.setForeground(new java.awt.Color(0, 102, 102));
        pemitExecuteBtn.setText("Execute");
        pemitExecuteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pemitExecuteBtnActionPerformed(evt);
            }
        });
        jPanel3.add(pemitExecuteBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 370, 188, 47));

        peermissionPrintBtn.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        peermissionPrintBtn.setForeground(new java.awt.Color(0, 102, 102));
        peermissionPrintBtn.setText("Print Permission");
        peermissionPrintBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                peermissionPrintBtnActionPerformed(evt);
            }
        });
        jPanel3.add(peermissionPrintBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 370, 244, 47));

        jLabel30.setBackground(new java.awt.Color(51, 0, 153));
        jLabel30.setFont(new java.awt.Font("Unispace", 1, 18)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(235, 252, 252));
        jLabel30.setText("Reason for permission");
        jPanel3.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, -1, -1));

        permitReasonBox.setBackground(new java.awt.Color(235, 252, 252));
        permitReasonBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                permitReasonBoxActionPerformed(evt);
            }
        });
        jPanel3.add(permitReasonBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, 478, 47));

        jPanel4.setBackground(new java.awt.Color(0, 102, 102));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jLabel32.setBackground(new java.awt.Color(51, 0, 153));
        jLabel32.setFont(new java.awt.Font("Unispace", 1, 18)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(235, 252, 252));
        jLabel32.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel32.setText("PERMITTED STUDENTS");
        jLabel32.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        permittedStudentsTable.setBackground(new java.awt.Color(235, 252, 252));
        permittedStudentsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(permittedStudentsTable);

        refreshPermissionBtn.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        refreshPermissionBtn.setForeground(new java.awt.Color(0, 102, 102));
        refreshPermissionBtn.setText("Refresh");
        refreshPermissionBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshPermissionBtnActionPerformed(evt);
            }
        });

        removePermissionBtn.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        removePermissionBtn.setForeground(new java.awt.Color(0, 102, 102));
        removePermissionBtn.setText("Remove");
        removePermissionBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removePermissionBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel32, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(refreshPermissionBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(removePermissionBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(refreshPermissionBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(removePermissionBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        backToDashBoardBtn.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        backToDashBoardBtn.setForeground(new java.awt.Color(0, 102, 102));
        backToDashBoardBtn.setText("Back");
        backToDashBoardBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backToDashBoardBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(msg1, javax.swing.GroupLayout.PREFERRED_SIZE, 1074, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(backToDashBoardBtn)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(msg1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backToDashBoardBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void permitNameBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_permitNameBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_permitNameBoxActionPerformed

    private void PermitSearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PermitSearchBtnActionPerformed
        // Retrieve search criteria from GUI components (e.g., student ID or name)
        String searchCriteria = permitNameBox.getText();

        // JDBC connection parameters
        String url = "jdbc:postgresql://localhost:5432/displine_management_system_db";
        String user = "postgres";
        String password = "123";

        // SQL SELECT query
        String sql = "SELECT * FROM students WHERE first_name LIKE ? OR last_name LIKE ?";

        try (Connection conn = DriverManager.getConnection(url, user, password);
                PreparedStatement pstmt = conn.prepareStatement(sql)) {
            // Set parameters for the prepared statement
            pstmt.setString(1, "%" + searchCriteria + "%");
            pstmt.setString(2, "%" + searchCriteria + "%");

            // Execute the SQL query
            ResultSet rs = pstmt.executeQuery();

            if (rs.next()) {
                // Student found, populate text boxes with student information
                studentNameBox.setText(rs.getString("first_name"));
                studentNameBox.setText(rs.getString("last_name"));
                pemitExecuteBtn.setVisible(true);
                //
            } else {
                // Student not found, display message to user
                JOptionPane.showMessageDialog(this, "Student not found.", "Search Result", JOptionPane.INFORMATION_MESSAGE);
                pemitExecuteBtn.setVisible(false);
                clearTextFields();
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            //clearTextFields();
        }
    }//GEN-LAST:event_PermitSearchBtnActionPerformed

    private void studentNameBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentNameBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_studentNameBoxActionPerformed

    private void permitDaysBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_permitDaysBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_permitDaysBoxActionPerformed

    private void pemitExecuteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pemitExecuteBtnActionPerformed
        // Retrieve information for the permission from GUI components
        String studentNames = studentNameBox.getText(); // Assuming this is a text field where you display the student names
        String reasonForPermission = permitReasonBox.getText(); // Assuming this is a text field where you enter the reason for the permission
        String dayOfPermission = permitDaysBox.getText(); // Assuming you want to use the current date for the permission and convert it to a string

        // JDBC connection parameters
        String url = "jdbc:postgresql://localhost:5432/displine_management_system_db";
        String user = "postgres";
        String password = "123";

        // SQL SELECT query to check if a permission for the same student already exists
        String selectSql = "SELECT COUNT(*) FROM permission WHERE student_names = ?";

        // SQL INSERT query to add the permission to the "permission" table
        String insertSql = "INSERT INTO permission (student_names, reason_for_permission, day_of_permission) VALUES (?, ?, ?)";

        try (Connection conn = DriverManager.getConnection(url, user, password);
                PreparedStatement selectStatement = conn.prepareStatement(selectSql);
                PreparedStatement insertStatement = conn.prepareStatement(insertSql)) {
            // Set parameters for the SELECT statement to check if a permission already exists for the same student
            selectStatement.setString(1, studentNames);

            // Execute the SELECT query
            ResultSet resultSet = selectStatement.executeQuery();
            resultSet.next();
            int existingPermissionsCount = resultSet.getInt(1);

            // If a permission already exists for the same student, display an error message and return
            if (existingPermissionsCount > 0) {
                JOptionPane.showMessageDialog(this, "A permission already exists for this student!", "Error", JOptionPane.ERROR_MESSAGE);
                clearTextFields();
                return;
            }

            // Set parameters for the INSERT statement
            insertStatement.setString(1, studentNames);
            insertStatement.setString(2, reasonForPermission);
            insertStatement.setString(3, dayOfPermission);

            // Execute the INSERT query
            int rowsAffected = insertStatement.executeUpdate();

            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(this, "Permission added successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
                clearTextFields();
            } else {
                JOptionPane.showMessageDialog(this, "Failed to add permission!", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_pemitExecuteBtnActionPerformed

    private void permitReasonBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_permitReasonBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_permitReasonBoxActionPerformed

    private void refreshPermissionBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshPermissionBtnActionPerformed
        // JDBC connection parameters
        String url = "jdbc:postgresql://localhost:5432/displine_management_system_db";
        String user = "postgres";
        String password = "123";

        // SQL SELECT query to fetch data from the "permission" table
        String selectSql = "SELECT * FROM permission";

        try (Connection conn = DriverManager.getConnection(url, user, password);
                Statement statement = conn.createStatement()) {
            // Execute the SQL query
            ResultSet resultSet = statement.executeQuery(selectSql);

            // Create a new DefaultTableModel to hold the data
            DefaultTableModel model = new DefaultTableModel();

            // Add columns to the model
            model.addColumn("Permission ID");
            model.addColumn("Student Names");
            model.addColumn("Reason for Permission");
            model.addColumn("Day of Permission");

            // Populate the model with data from the ResultSet
            while (resultSet.next()) {
                Object[] rowData = {
                    resultSet.getInt("permission_id"),
                    resultSet.getString("student_names"),
                    resultSet.getString("reason_for_permission"),
                    resultSet.getString("day_of_permission")
                };
                model.addRow(rowData);
            }

            // Set the model to the jTable
            permittedStudentsTable.setModel(model);

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_refreshPermissionBtnActionPerformed

    private void removePermissionBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removePermissionBtnActionPerformed
        // Get the selected row index from the jTable
        int selectedRowIndex = permittedStudentsTable.getSelectedRow();

        if (selectedRowIndex == -1) {
            JOptionPane.showMessageDialog(this, "Please select a permission to remove.", "Error", JOptionPane.ERROR_MESSAGE);
            return; // No row selected, exit method
        }

        // Get the value from the first column of the selected row, assuming it contains the permission ID
        int permissionIdToRemove = (int) permittedStudentsTable.getValueAt(selectedRowIndex, 0);

        // Confirm with the user before deleting
        int option = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this user?", "Confirmation", JOptionPane.YES_NO_OPTION);
        if (option != JOptionPane.YES_OPTION) {
            return; // Cancel deletion if user selects No
        }
        // JDBC connection parameters
        String url = "jdbc:postgresql://localhost:5432/displine_management_system_db";
        String user = "postgres";
        String password = "123";

        // SQL DELETE query to remove the permission from the "permission" table
        String deleteSql = "DELETE FROM permission WHERE permission_id = ?";

        try (Connection conn = DriverManager.getConnection(url, user, password);
                PreparedStatement statement = conn.prepareStatement(deleteSql)) {
            // Set the parameter for the prepared statement
            statement.setInt(1, permissionIdToRemove);

            // Execute the DELETE query
            int rowsAffected = statement.executeUpdate();

            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(this, "Permission removed successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
                // Optionally, refresh the displayed permissions in your GUI after removal
            } else {
                JOptionPane.showMessageDialog(this, "Failed to remove permission!", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_removePermissionBtnActionPerformed

    private void backToDashBoardBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backToDashBoardBtnActionPerformed
        TeacherDashboard f = new TeacherDashboard();
        f.show();
        this.dispose();
    }//GEN-LAST:event_backToDashBoardBtnActionPerformed

    private void peermissionPrintBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_peermissionPrintBtnActionPerformed
        // Set the title of the table
        String tableTitle = "Permitted Students";
        // Create the header MessageFormat including the title
        MessageFormat header = new MessageFormat("DISPLINE MANAGEMENT SYSTEM - " + tableTitle);
        MessageFormat footer = new MessageFormat("©25753__Maliki Ntwali");
        try {
            permittedStudentsTable.print(JTable.PrintMode.FIT_WIDTH, header, footer);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_peermissionPrintBtnActionPerformed
    private void clearTextFields() {
        // Assuming these are your text fields, replace them with your actual text field names
        studentNameBox.setText("");
        permitReasonBox.setText("");
        permitDaysBox.setText("");
        permitNameBox.setText("");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(permission.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(permission.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(permission.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(permission.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new permission().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton PermitSearchBtn;
    private javax.swing.JButton backToDashBoardBtn;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel msg1;
    private javax.swing.JButton peermissionPrintBtn;
    private javax.swing.JButton pemitExecuteBtn;
    private javax.swing.JTextField permitDaysBox;
    private javax.swing.JTextField permitNameBox;
    private javax.swing.JTextField permitReasonBox;
    private javax.swing.JTable permittedStudentsTable;
    private javax.swing.JButton refreshPermissionBtn;
    private javax.swing.JButton removePermissionBtn;
    private javax.swing.JTextField studentNameBox;
    // End of variables declaration//GEN-END:variables
}
