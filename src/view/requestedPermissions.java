package view;

import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 * @author 1BestCsharp
 */
public class requestedPermissions extends javax.swing.JFrame {

    /**
     * Creates new form Dashboard
     */
    public requestedPermissions() {
        initComponents();

        // center the form
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        studentNameBox = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        denialBtn = new javax.swing.JButton();
        jLabel30 = new javax.swing.JLabel();
        permitReasonBox = new javax.swing.JTextField();
        grantBtn = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel35 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        pendingRequestsTable = new javax.swing.JTable();
        refreshBtn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        backBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("REQUESTED PERMISSIONS");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));

        jPanel4.setBackground(new java.awt.Color(0, 102, 102));

        jPanel5.setBackground(new java.awt.Color(0, 102, 102));
        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel27.setBackground(new java.awt.Color(51, 0, 153));
        jLabel27.setFont(new java.awt.Font("Unispace", 1, 18)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(235, 252, 252));
        jLabel27.setText("Student Names");
        jPanel5.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 60, -1, -1));

        studentNameBox.setBackground(new java.awt.Color(235, 252, 252));
        studentNameBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentNameBoxActionPerformed(evt);
            }
        });
        jPanel5.add(studentNameBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 95, 478, 47));

        jLabel29.setBackground(new java.awt.Color(51, 0, 153));
        jLabel29.setFont(new java.awt.Font("Unispace", 1, 18)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(235, 252, 252));
        jLabel29.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel29.setText("ENTER DETAILS FOR REQUESTING PERMISSION ");
        jLabel29.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jPanel5.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 460, 41));

        denialBtn.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        denialBtn.setForeground(new java.awt.Color(0, 102, 102));
        denialBtn.setText("Denial Permission");
        denialBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                denialBtnActionPerformed(evt);
            }
        });
        jPanel5.add(denialBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 330, 240, 47));

        jLabel30.setBackground(new java.awt.Color(51, 0, 153));
        jLabel30.setFont(new java.awt.Font("Unispace", 1, 18)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(235, 252, 252));
        jLabel30.setText("Reason for permission");
        jPanel5.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, -1, -1));

        permitReasonBox.setBackground(new java.awt.Color(235, 252, 252));
        permitReasonBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                permitReasonBoxActionPerformed(evt);
            }
        });
        jPanel5.add(permitReasonBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, 478, 47));

        grantBtn.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        grantBtn.setForeground(new java.awt.Color(0, 102, 102));
        grantBtn.setText("Grant Permission");
        grantBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grantBtnActionPerformed(evt);
            }
        });
        jPanel5.add(grantBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, 240, 47));

        jPanel6.setBackground(new java.awt.Color(0, 102, 102));
        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jLabel35.setBackground(new java.awt.Color(51, 0, 153));
        jLabel35.setFont(new java.awt.Font("Unispace", 1, 18)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(235, 252, 252));
        jLabel35.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel35.setText("REQUESTED PERMISSIONS");
        jLabel35.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        pendingRequestsTable.setBackground(new java.awt.Color(235, 252, 252));
        pendingRequestsTable.setFont(new java.awt.Font("Comic Sans MS", 0, 11)); // NOI18N
        pendingRequestsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        pendingRequestsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pendingRequestsTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(pendingRequestsTable);

        refreshBtn.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        refreshBtn.setForeground(new java.awt.Color(0, 102, 102));
        refreshBtn.setText("Refresh");
        refreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel35, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 486, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(refreshBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addComponent(refreshBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 496, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(0, 102, 102));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(235, 252, 252));
        jLabel6.setText("REQUESTED PERMISSIONS");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addContainerGap(390, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        backBtn.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        backBtn.setForeground(new java.awt.Color(0, 102, 102));
        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(backBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void studentNameBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentNameBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_studentNameBoxActionPerformed

    private void denialBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_denialBtnActionPerformed
        // JDBC connection parameters
        String url = "jdbc:postgresql://localhost:5432/displine_management_system_db";
        String user = "postgres";
        String password = "123";

        // Get the selected row index
        int selectedRow = pendingRequestsTable.getSelectedRow();

        // If a row is selected
        if (selectedRow != -1) {
            try {
                // Retrieve the request ID from the selected row
                DefaultTableModel model = (DefaultTableModel) pendingRequestsTable.getModel();
                int requestId = (int) model.getValueAt(selectedRow, 0);

                // Establish connection to the database
                Connection conn = DriverManager.getConnection(url, user, password);

                // Update the status of the request to 'Denied' in the database
                String sql = "UPDATE PermissionRequests SET status = 'Denied' WHERE request_id = ?";
                PreparedStatement pstmt = conn.prepareStatement(sql);
                pstmt.setInt(1, requestId);
                pstmt.executeUpdate();

                // Close resources
                pstmt.close();
                conn.close();

                // Notify the user that the request was denied
                JOptionPane.showMessageDialog(this, "Permission request denied.");

                // Refresh the table to reflect the changes
                // You can call a method to refresh the table here if needed
            } catch (Exception e) {
                // Handle any exceptions that occur
                JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
            }
        } else {
            // If no row is selected, display a message to the user
            JOptionPane.showMessageDialog(this, "Please select a request to deny.");
        }
    }//GEN-LAST:event_denialBtnActionPerformed

    private void permitReasonBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_permitReasonBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_permitReasonBoxActionPerformed

    private void refreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtnActionPerformed
        // JDBC connection parameters
        String url = "jdbc:postgresql://localhost:5432/displine_management_system_db";
        String user = "postgres";
        String password = "123";

        try {
            // Establish connection to the database
            Connection conn = DriverManager.getConnection(url, user, password);

            // Create SQL SELECT statement for pending requests
            String sql = "SELECT * FROM PermissionRequests WHERE status = 'Pending'";

            // Create prepared statement
            PreparedStatement pstmt = conn.prepareStatement(sql);

            // Execute the query
            ResultSet rs = pstmt.executeQuery();

            // Create a DefaultTableModel to store the data
            DefaultTableModel model = new DefaultTableModel();

            // Add columns to the model
            model.addColumn("Request ID");
            model.addColumn("Student Name");
            model.addColumn("Reason");
            model.addColumn("Status");

            // Add rows to the model
            while (rs.next()) {
                Object[] row = {
                    rs.getInt("request_id"),
                    rs.getString("student_name"),
                    rs.getString("reason"),
                    rs.getString("status")
                };
                model.addRow(row);
            }

            // Close resources
            rs.close();
            pstmt.close();
            conn.close();

            // Set the model to the JTable
            pendingRequestsTable.setModel(model);

        } catch (Exception e) {
            // Handle any exceptions that occur
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
    }//GEN-LAST:event_refreshBtnActionPerformed

    private void grantBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grantBtnActionPerformed
        // JDBC connection parameters
        String url = "jdbc:postgresql://localhost:5432/displine_management_system_db";
        String user = "postgres";
        String password = "123";

        // Get the selected row index
        int selectedRow = pendingRequestsTable.getSelectedRow();

        // If a row is selected
        if (selectedRow != -1) {
            try {
                // Retrieve the request ID and data from the selected row
                DefaultTableModel model = (DefaultTableModel) pendingRequestsTable.getModel();
                int requestId = (int) model.getValueAt(selectedRow, 0);
                // Establish connection to the database
                Connection conn = DriverManager.getConnection(url, user, password);

                // Update the status of the request to 'Approved' in the database
                String sql = "UPDATE PermissionRequests SET status = 'Approved' WHERE request_id = ?";
                PreparedStatement pstmt = conn.prepareStatement(sql);
                pstmt.setInt(1, requestId);
                pstmt.executeUpdate();

                // Close resources
                pstmt.close();
                conn.close();

                // Notify the user that the request was granted
                JOptionPane.showMessageDialog(this, "Permission request granted.");

                // Refresh the table to reflect the changes
                // You can call a method to refresh the table here if needed
            } catch (Exception e) {
                // Handle any exceptions that occur
                JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
            }
        } else {
            // If no row is selected, display a message to the user
            JOptionPane.showMessageDialog(this, "Please select a request to grant.");
        }
    }//GEN-LAST:event_grantBtnActionPerformed

    private void pendingRequestsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pendingRequestsTableMouseClicked

        int row = pendingRequestsTable.getSelectedRow();

        if (row >= 0) {
            // Get data from the selected row
            String studentName = pendingRequestsTable.getValueAt(row, 1).toString();
            String reason = pendingRequestsTable.getValueAt(row, 2).toString();

            // Populate JTextFields
            studentNameBox.setText(studentName);
            permitReasonBox.setText(reason);
        }
    }//GEN-LAST:event_pendingRequestsTableMouseClicked

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
       Dashboard f = new Dashboard();
       f.show();
       this.dispose();
    }//GEN-LAST:event_backBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Dashboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JButton denialBtn;
    private javax.swing.JButton grantBtn;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable pendingRequestsTable;
    private javax.swing.JTextField permitReasonBox;
    private javax.swing.JButton refreshBtn;
    private javax.swing.JTextField studentNameBox;
    // End of variables declaration//GEN-END:variables
}
